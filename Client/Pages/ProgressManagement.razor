@page "/Dashboard"
@using Data;
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject ILogger<ProgressManagement> logger
@using System.Text.RegularExpressions;

<div class="container">
    <div class="row">
        <div class="col-4">

        </div>
        <div class="col-8">
            @if (searchProcessingFlag)
            {
                <p class="mt-5"><em>Loading...</em></p>
            }
        </div>
        <h1>進捗管理表</h1>
    </div>
    
    <div class="row">
        <div class="col-4">
            <div class="">
                <select class="form-control" id="ShippingPointCode" @bind="@ShippingPointCode" required>
                    <option value="100">Yashio Dock</option><!--!-->
                    <option value="110" selected>Sugito Dock</option><!--!-->
                </select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-7">
            <div class="progress">
                <div class="progress-bar" role="progressbar" style="width: @ProgressPercent%;" aria-valuenow="@InspectedCount" aria-valuemin="0" aria-valuemax="@TotalCount">
                    <span class="progress-label">@ProgressPercent%</span>
                </div>
                
            </div>
            <div style="font-size:50px;">
                @InspectedCount / @TotalCount
            </div>
            <div style="font-size:50px;">
                残 @UninspectedCount 件
            </div>
        </div>

        <div class="col-5">
            <h2>運送会社別進捗</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th class="align-top">運送会社</th>
                        <th class="align-top">総計</th>
                        <th class="align-top">未</th>
                        <th class="align-top">済</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var rowObj in TransProgressList)
                    {
                        <tr>
                            <td class="align-middle sc-table-cell" style="width: 40%; max-width: 0;">
                                <div>@rowObj.TransporterName</div>
                            </td>
                            <td class="align-middle sc-table-cell" style="width: 20%; max-width: 0;">
                                <div>@rowObj.TotalCount</div>
                            </td>
                            <td class="align-middle sc-table-cell" style="width: 20%; max-width: 0;">
                                <div>@rowObj.UninspectedCount</div>
                            </td>
                            <td class="align-middle sc-table-cell" style="width: 20%; max-width: 0;">
                                <div>@rowObj.InspectedCount</div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <hr />

    <div class="row">
        <div class="col-12">
            <h2>出荷グループ別進捗</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th class="align-top">出荷グループ名</th>
                        <th class="align-top">総計</th>
                        <th class="align-top">未</th>
                        <th class="align-top">済</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var rowObj in ShippingGroupProgressList)
                    {
                        <tr>
                            <td class="align-middle sc-table-cell" style="width: 40%; max-width: 0;">
                                <div>@rowObj.ShippingGroupName</div>
                            </td>
                            <td class="align-middle sc-table-cell" style="width: 20%; max-width: 0;">
                                <div>@rowObj.TotalCount</div>
                            </td>
                            <td class="align-middle sc-table-cell" style="width: 20%; max-width: 0;">
                                <div>@rowObj.UninspectedCount</div>
                            </td>
                            <td class="align-middle sc-table-cell" style="width: 20%; max-width: 0;">
                                <div>@rowObj.InspectedCount</div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>

@code {
    private List<TransProgress> TransProgressList = new List<TransProgress>();
    private List<ShippingGroupProgress> ShippingGroupProgressList = new List<ShippingGroupProgress>();
    private string ShippingPointCode = "110";
    private int InspectedCount;
    private int UninspectedCount;
    private int TotalCount;
    private decimal ProgressPercent;

    private bool isClickProcessingFlag = false;
    private bool searchProcessingFlag = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetTransProgress();
            await GetShippingGroupProgress();
        }
        catch (Exception e)
        {
            logger.LogInformation(e.Message);
        }
    }


    private async Task GetTransProgress()
    {
        searchProcessingFlag = true;
        TransProgressList = await Http.GetFromJsonAsync<List<TransProgress>>($"api/TransProgresses/?ShippingPointCode={ShippingPointCode}");
        foreach(var row in TransProgressList)
        {
            if(row.TransporterName == "計")
            {
                TotalCount = row.TotalCount;
                InspectedCount = row.InspectedCount;
                UninspectedCount = row.UninspectedCount;
                ProgressPercent = Math.Ceiling(Convert.ToDecimal(((decimal)row.InspectedCount / (decimal)row.TotalCount) * 100));
                logger.LogInformation(ProgressPercent.ToString());
            }
        }

        searchProcessingFlag = false; 
        logger.LogInformation("api executed");
    }

    private async Task GetShippingGroupProgress()
    {
        searchProcessingFlag = true;
        ShippingGroupProgressList = await Http.GetFromJsonAsync<List<ShippingGroupProgress>>($"api/ShippingGroupProgresses/?ShippingPointCode={ShippingPointCode}");
        searchProcessingFlag = false;
    }

    private string DetailRowCssClass(ShipItem shipItem)
    {
        //検品完了の場合、水色
        if(shipItem.QtyPrint == shipItem.QtyPick)
        {
            return "scanDone-row";
        }
        //チラシの場合、黄色
        else if (shipItem.DelivSlipNonPrintFlag)
        {
            return "alert-row";
        }
        else
        {
            return "";
        }
    }
}